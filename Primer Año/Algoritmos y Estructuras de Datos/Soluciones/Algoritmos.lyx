#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
tcolorbox
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algoritmos y Estructuras de Datos
\end_layout

\begin_layout Author
Práctica 1
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura secuencial
\end_layout

\begin_layout Enumerate
Modificando el siguiente ejemplo, agregar el cálculo del producto e informar
 los resultados:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1.png
	scale 40

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-1.png
	scale 40

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
La declarativa de variables como se ve en los diagramas aquí presentes es
 tanto correcta como frecuente.
 Desafortunadamente la cátedra lo considera incorrecto.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N1       = int(input())
\end_layout

\begin_layout Plain Layout

N2       = int(input())
\end_layout

\begin_layout Plain Layout

SUMA     = N1 + N2
\end_layout

\begin_layout Plain Layout

PRODUCTO = N2 * N2
\end_layout

\begin_layout Plain Layout

print(SUMA)
\end_layout

\begin_layout Plain Layout

print(PRODUCTO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Describa lo que realiza el diagrama de Chapin.
 Indicar el valor que se muestra si las variables tendrían los siguientes
 valores: 
\begin_inset Formula $A=10$
\end_inset

, 
\begin_inset Formula $B=20$
\end_inset

 y 
\begin_inset Formula $C=2$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2.png
	scale 40

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
Muestra en la pantalla el resultado de sumar los primeros dos números ingresados
 y dividirlos por el tercero.
\end_layout

\end_deeper
\begin_layout Enumerate
Dados como datos cinco números obtener el promedio de los mismos e informar
 el resultado.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-3.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO4  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el cuarto numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO5  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el quinto numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA     = NUMERO1 + NUMERO2 + NUMERO3 + NUMERO4 + NUMERO5
\end_layout

\begin_layout Plain Layout

PROMEDIO = SUMA / 5
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

El promedio es:
\begin_inset Quotes erd
\end_inset

, PROMEDIO)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Existen varias formas de resolver cada algoritmo.
 La siguiente por ejemplo, es equivalente a la anterior pero utiliza una
 sola variable:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

PROMEDIO  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

)) / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el cuarto numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el quinto numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

El promedio es:
\begin_inset Quotes erd
\end_inset

, PROMEDIO)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como dos números obtener su suma, resta, multiplicación y división.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-4.png
	scale 32

\end_inset


\end_layout

\begin_layout Itemize
Python:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA     = NUMERO1 + NUMERO2
\end_layout

\begin_layout Plain Layout

RESTA    = NUMERO1 - NUMERO2
\end_layout

\begin_layout Plain Layout

PRODUCTO = NUMERO1 * NUMERO2
\end_layout

\begin_layout Plain Layout

DIVISION = NUMERO1 / NUMERO2
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La suma es:
\begin_inset Quotes erd
\end_inset

, SUMA)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La resta es:
\begin_inset Quotes erd
\end_inset

, RESTA)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La mutiplicacion es:
\begin_inset Quotes erd
\end_inset

, PRODUCTO)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La division es:
\begin_inset Quotes erd
\end_inset

, DIVISION)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Dado un número mostrar el producto de ese número por 6, suponiendo que se
 cuenta solamente con el operador suma.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-5.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO   = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese un numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SEXTUPLE = NUMERO + NUMERO + NUMERO + NUMERO + NUMERO + NUMERO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El producto por 6 es:
\begin_inset Quotes erd
\end_inset

, SEXTUPLE)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dadas las medidas de dos ángulos de un triángulo, determinar la medida del
 tercero e informar el resultado.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-6.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

ANGULO1 = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer angulo: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO2 = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo angulo: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO3 = 180 - ANGULO1 - ANGULO2
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El ángulo restante es:
\begin_inset Quotes erd
\end_inset

, ANGULO3)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado el valor del lado de un cuadrado, calcular su perímetro y su superficia,
 e informar los mismos con carteles aclaratorios.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-7.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

LADO       = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el lado: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

PERIMETRO  = LADO * 4
\end_layout

\begin_layout Plain Layout

SUPERFICIE = LADO * LADO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El perimetro es:
\begin_inset Quotes erd
\end_inset

, PERIMETRO)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

La superficie es:
\begin_inset Quotes erd
\end_inset

, SUPERFICIE)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado un número, mostrar el resultado de dicho número elevado a la octava.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-8.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N         = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

RESULTADO = N * N * N * N * N * N * N * N
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El resultado es:
\begin_inset Quotes erd
\end_inset

, RESULTADO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Tener en cuenta, que solo se reconocen 4 operaciones básicas.
 ¿Cual sería el algoritmo si la máquina cuenta además con la operación potencia?
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-9.png
	scale 37

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N         = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

RESULTADO = N ** 8
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El resultado es:
\begin_inset Quotes erd
\end_inset

, RESULTADO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado como dato el importe neto de una factura, calcular el valor correspondiente
 al IVA (21%).
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-10.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NETO  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el importe neto: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

BRUTO = NETO / 1.21
\end_layout

\begin_layout Plain Layout

IVA   = NETO - BRUTO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El IVA es: 
\begin_inset Quotes erd
\end_inset

, IVA)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular el sueldo de un operario conociendo la cantidad de horas que trabajó
 en el mes y el jornal horario.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-11.png
	scale 35

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

HORAS  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese las horas: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

JORNAL = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el jornal horario: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUELDO = HORAS * JORNAL
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El sueldo es: 
\begin_inset Quotes erd
\end_inset

, SUELDO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Determinar el número de horas, minutos y segundos que hay en 6250 segundos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-12.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

SEGUNDOS = 6250
\end_layout

\begin_layout Plain Layout

MINUTOS  = SEGUNDOS / 60
\end_layout

\begin_layout Plain Layout

HORAS    = MINUTOS / 60
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Horas: 
\begin_inset Quotes eld
\end_inset

, HORAS)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Minutos: 
\begin_inset Quotes eld
\end_inset

, MINUTOS)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Segundos: 
\begin_inset Quotes eld
\end_inset

, SEGUNDOS)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado el importe bruto de una factura, calcular el resultado de bonificarlo
 (descuento) con un 
\begin_inset Formula $4\%$
\end_inset

.
 Al monto obtenido, calcularle el IVA (
\begin_inset Formula $21\%$
\end_inset

).
 Finalmente informar: el importe bruto, el valor de la bonificación, el
 importe bruto bonificado, el monto correspondiente al IVA y el importe
 neto resultante.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-13.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

BRUTO        = int(input("Ingrese el importe bruto: "))
\end_layout

\begin_layout Plain Layout

BONIFICACION = BRUTO * 4 / 100
\end_layout

\begin_layout Plain Layout

SUBTOTAL     = BRUTO - BONIFICACION
\end_layout

\begin_layout Plain Layout

IVA          = SUBTOTAL * 21 / 100
\end_layout

\begin_layout Plain Layout

NETO         = SUBTOTAL + IVA
\end_layout

\begin_layout Plain Layout

print("Bruto:", BRUTO)
\end_layout

\begin_layout Plain Layout

print("Bonificacion:", BONIFICACION)
\end_layout

\begin_layout Plain Layout

print("Subtotal:", SUBTOTAL)
\end_layout

\begin_layout Plain Layout

print("IVA:", IVA)
\end_layout

\begin_layout Plain Layout

print("neto:", NETO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular cuántos pesos tiene un banco en monedas si dispone de 
\begin_inset Formula $N1$
\end_inset

 monedas de 1 peso, 
\begin_inset Formula $N2$
\end_inset

 de medio peso, 
\begin_inset Formula $N3$
\end_inset

 de un cuarto de peso, 
\begin_inset Formula $N4$
\end_inset

 de 10 centavos y 
\begin_inset Formula $N5$
\end_inset

 de 5 centavos de peso.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-14.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N1    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N2    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N3    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N4    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

PESOS = N1 + N2 * 0.5 + N3 * 0.25 + N4 * 0.1
\end_layout

\begin_layout Plain Layout

print("$", PESOS)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar 3 valores en 3 variables 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

.
 Se desea obtener una rotación de sus valores, es decir que el contenido
 de 
\begin_inset Formula $Z$
\end_inset

 pase a 
\begin_inset Formula $X$
\end_inset

, el contenido de 
\begin_inset Formula $X$
\end_inset

 pase a 
\begin_inset Formula $Y$
\end_inset

, y el contenido de 
\begin_inset Formula $Y$
\end_inset

 pase a 
\begin_inset Formula $Z$
\end_inset

.
 Se debe mostrar las variables 
\begin_inset Formula $X,$
\end_inset

 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

 con sus valores originales y mostrar 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

 con los valres luego de la rotación.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-15.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

X = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese X: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Y = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Y: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Z = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Z: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\begin_layout Plain Layout

T = X
\end_layout

\begin_layout Plain Layout

X = Z
\end_layout

\begin_layout Plain Layout

Z = Y
\end_layout

\begin_layout Plain Layout

Y = T
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Python ofrece una sintaxis mas cómoda para el intercambio de variables.
 El mismo programa puede realizarse de la siguiente manera:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

X = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese X: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Y = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Y: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Z = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Z: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\begin_layout Plain Layout

X, Y, Z = Z, X, Y
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Indicar cómo será la salida luego de realizar lo pedido en el ejercicio
 anterior, si se ingresa 10 en la variable 
\begin_inset Formula $X$
\end_inset

, 15 en la variable 
\begin_inset Formula $Y$
\end_inset

 y 20 en la variable 
\begin_inset Formula $Z$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

X:  10
\end_layout

\begin_layout Plain Layout

Y:  15
\end_layout

\begin_layout Plain Layout

Z:  20
\end_layout

\begin_layout Plain Layout

X:  20
\end_layout

\begin_layout Plain Layout

Y:  10
\end_layout

\begin_layout Plain Layout

Z:  15
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Desición Simple (IF)
\end_layout

\begin_layout Enumerate
Dados dos números distintos, mostrarlos ordenados en forma creciente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Los numeros en orden son: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

if NUMERO1 < NUMERO2:
\end_layout

\begin_layout Plain Layout

    print(NUMERO1, NUMERO2)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(NUMERO2, NUMERO1)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado un número determinar si es positivo o negativo.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-2.png
	scale 39

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO < 0:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero es negativo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero es positivo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dada la medida de cada uno de los tres ángulos de un triángulo determinar
 e informar mediante un mensaje si pertenecen o no a un triángulo rectángulo
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -4.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-3.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

ANGULO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA    = ANGULO1 + ANGULO2 + ANGULO3
\end_layout

\begin_layout Plain Layout

if SUMA == 180 and ANGULO1 > 0 and ANGULO2 > 0 and ANGULO3 > 0:
\end_layout

\begin_layout Plain Layout

    if ANGULO1 == 90 or ANGULO2 == 90 or ANGULO3 == 90:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

Es un triangulo rectangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

No es un triangulo rectangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

No es un triangulo
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar tres números enteros distintos.
 Determinar y mostrar si ingresaron en orden creciente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -3cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-4.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO1 <= NUMERO2 and NUMERO2 <= NUMERO3:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Los numeros se ingresaron en orden.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Los numeros no se ingresaron en orden.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Determinar si el primero de un conjunto de tres números dados, es menor
 que los otros dos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -3cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-5.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO1 < NUMERO2 and NUMERO1 < NUMERO3:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El primer numero es menor que los otros.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El primer numero no es menor que los otros.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar tres letras mayúsculas y mostrarlas ordenadas alfabéticamente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: Existen múltiples formas de resolver este algoritmo, la mas evidente
 utiliza múltiples estructuras de decisión simple anidadas.
 La que muestro a continuación utiliza estructuras de decisión simple secuencial
es, lo cual considero mas simple.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-6.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la primer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L2 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la segunda letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L3 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la tercer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 < L2 and L2 < L3:
\end_layout

\begin_layout Plain Layout

    print(L1, L2, L3)
\end_layout

\begin_layout Plain Layout

if L1 < L3 and L3 < L2:
\end_layout

\begin_layout Plain Layout

    print(L1, L3, L2)
\end_layout

\begin_layout Plain Layout

if L2 < L1 and L1 < L3:
\end_layout

\begin_layout Plain Layout

    print(L2, L1, L3)
\end_layout

\begin_layout Plain Layout

if L2 < L3 and L3 < L1:
\end_layout

\begin_layout Plain Layout

    print(L2, L3, L1)
\end_layout

\begin_layout Plain Layout

if L3 < L1 and L1 < L2:
\end_layout

\begin_layout Plain Layout

    print(L3, L1, L2)
\end_layout

\begin_layout Plain Layout

if L3 < L2 and L2 < L1:
\end_layout

\begin_layout Plain Layout

    print(L3, L2, L1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Como alternativa al anterior algoritmo, se presenta el siguiente programa
 que solo utiliza 3 estructuras de decisión simple.
 Dicho algoritmo se llama 
\begin_inset Quotes fld
\end_inset

ordenamiento burbuja
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la primer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L2 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la segunda letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L3 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la tercer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 > L2:
\end_layout

\begin_layout Plain Layout

  L1, L2 = L2, L1
\end_layout

\begin_layout Plain Layout

if L2 > L3:
\end_layout

\begin_layout Plain Layout

  L2, L3 = L3, L2
\end_layout

\begin_layout Plain Layout

if L1 > L2:
\end_layout

\begin_layout Plain Layout

  L1, L2 = L2, L1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(L1, L2, L3)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se desea controlar en una fábrica la calidad de dos tipos de piezas que
 denominaremos A y B.
\end_layout

\begin_deeper
\begin_layout Standard
Se dan como datos el tipo de pieza y su medida en milímetros y se debe indicar
 si cumple con las especificaciones sabiendo que: 
\end_layout

\begin_layout Itemize
Las piezas de tipo A deben medir 165 mm y se admite un error de +/-2 mm.
\end_layout

\begin_layout Itemize
Las piezas de tipo B deben medir 180 mm y se admite un error de +/-3 mm.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -5.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-7.png
	scale 35

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TIPO   = input(
\begin_inset Quotes fld
\end_inset

Ingrese el tipo de pieza: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

MEDIDA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese la medida de la pieza: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if TIPO == 
\begin_inset Quotes fld
\end_inset

A
\begin_inset Quotes frd
\end_inset

 and 163 <= MEDIDA and MEDIDA <= 167:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

elif TIPO == 
\begin_inset Quotes fld
\end_inset

B
\begin_inset Quotes frd
\end_inset

 and 177 <= MEDIDA and MEDIDA <= 183:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza no cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se leen tres números positivos.
 Determinar si son las longitudes de los lados de un triángulo: Recordar
 que en todo triangulo cada lado es menor o igual que la suma de los otros
 dos y menor que su diferencia (basta mostrarlo para un lado).
 En caso afirmativo, informar si el mismo es equilátero (3 lados iguales),
 isósceles (2 lados iguales) o escaleno (3 lados distintos).
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El enunciado que da origen al problema, y la supuesta solución que brindó
 la cátedra no determinan en forma correcta algunos triángulos.
 La solución que se presenta a continuación es correcta.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -5.25cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-8.png
	scale 33

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

L2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

L3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 + L2 <= L3 or L1 + L3 <= L2 or L2 + L3 <= L1:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

No es un triangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    if L1 == L2 and L2 == L3:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo equilatero.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    elif L1 == L2 or L1 == L3 or L2 == L3:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo isoceles.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo escaleno.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Una distribuidora de libros vende a librerías y a particulares.
 Aplica bonificaciones por cantidad según el siguiente criterio:
\end_layout

\begin_deeper
\begin_layout Itemize
Librerías: hasta 24 unidades, el 20%; más de 24 unidades, el 25%.
\end_layout

\begin_layout Itemize
Particulares: menos de 6 unidades, nada; desde 6 hasta 18 unidades, el 5%;
 y más de 18 unidades, el 10%.
\end_layout

\begin_layout Standard
El tipo de cliente está codificado: 
\begin_inset Quotes fld
\end_inset

L
\begin_inset Quotes frd
\end_inset

 para librerías y 
\begin_inset Quotes fld
\end_inset

P
\begin_inset Quotes frd
\end_inset

 para particular.
 Dado el importe bruto total de una compra de libros, el tipo de cliente
 y la cantidad total pedida por el mismo, determinar el importe bruto bonificado.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -1.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-9.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TIPO     = input(
\begin_inset Quotes fld
\end_inset

Ingrese el tipo de cliente: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

IMPORTE  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el importe bruto: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

CANTIDAD = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese la cantidad de unidades: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if TIPO == 
\begin_inset Quotes fld
\end_inset

L
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

    if CANTIDAD <= 24:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 20
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 25
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    if CANTIDAD < 6:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 0
\end_layout

\begin_layout Plain Layout

    elif CANTIDAD <= 18:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 5
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 10
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

IMPORTEB = IMPORTE - (IMPORTE * BONIFICACION / 100)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El importe bonificado es:
\begin_inset Quotes frd
\end_inset

, IMPORTEB)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
11)
\end_layout

\end_inset

Dado como dato la cantidad de kilowatios consumidos por un usuario en un
 mes, calcular el importe a pagar por el mismo teniendo en cuenta que: 
\end_layout

\begin_deeper
\begin_layout Itemize
Si la cantidad de kilowatios consumidos es menor ó igual a 200, el precio
 del kilowatio es de 0.05 pesos.
\end_layout

\begin_layout Itemize
Si la cantidad de kilowatios consumidos es mayor que 200 y menor que 1000,
 el precio del kilowatio es de 0.1 pesos.
\end_layout

\begin_layout Itemize
Si la cantidad de kilowatios consumidos es mayor ó igual que 1000, el precio
 del kilowatio es de 0.15 pesos.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
12)
\end_layout

\end_inset

 Se ingresan seis números positivos diferentes.
 Al final mostrar un cartel que diga: 
\begin_inset Quotes fld
\end_inset

El mayor número ingresado fue el xxx
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-12.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El mismo programa puede realizarse con solo dos variables, si en vez de
 solicitar toda la entrada y luego computar, computamos la salida a medida
 que obtenemos la entrada.
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes/ej2-12-alt.png
	scale 40

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYOR  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 1er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 2do numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 3er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 4to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 5to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 6to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mayor es:
\begin_inset Quotes frd
\end_inset

, MAYOR)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
13)
\end_layout

\end_inset

El mismo que el anterior, pero indicar la posición en que entró el mayor.
 (Ej.
 
\begin_inset Quotes fld
\end_inset

El mayor fue xx y fue ingresado quinto
\begin_inset Quotes frd
\end_inset

).
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-13.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYOR  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 1er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

POSICION = 1
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 2do numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 2
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 3er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 3
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 4to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 4
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 5to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 5
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 6to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 6
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mayor es:
\begin_inset Quotes frd
\end_inset

, MAYOR, 
\begin_inset Quotes fld
\end_inset

y la posicion es
\begin_inset Quotes frd
\end_inset

, POSICION)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
14)
\end_layout

\end_inset

 Se dan dos valores cualesquiera enteros.
 Si el primero es mayor que el segundo, restarle al primero un 20%, pero
 si el segundo es el mayor restarle al segundo un 15%.
 Con estos nuevos valores, si el primero quedo mayor a 100 y el segundo
 mayor a 150, se lo consideran valores correctos, de lo contrario es un
 intervalo de riesgo.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad conocida de veces (FOR)
\end_layout

\begin_layout Enumerate
Calcular el sueldo de cada uno de los 50 operarios de una fábrica dados
 como datos la remuneración por hora (es la misma para todos los operarios)
 y la cantidad de horas que trabajó en el mes cada operario.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

REMUNERACION = int(input("Ingrese remuneracion por hora: "))
\end_layout

\begin_layout Plain Layout

for OPERARIO in range(1,5):
\end_layout

\begin_layout Plain Layout

    print("Ingrese cantidad de horas operario", OPERARIO)
\end_layout

\begin_layout Plain Layout

    HORAS = int(input())
\end_layout

\begin_layout Plain Layout

    print("Sueldo:", HORAS * REMUNERACION)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como datos 100 números enteros, mostrar cada uno de ellos indicando
 si es 
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

 ó 
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

, según corresponda.
 
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-2.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

for DATO in range(1, 100):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero
\begin_inset Quotes frd
\end_inset

, NUMERO, 
\begin_inset Quotes fld
\end_inset

es
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    if NUMERO < 0:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
En Python puede utilizarse una estructura de desición simple como expresión.
 El siguiente programa es equivalente al anterior:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

for DATO in range(1, 100):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero
\begin_inset Quotes frd
\end_inset

, NUMERO, 
\begin_inset Quotes fld
\end_inset

es
\begin_inset Quotes frd
\end_inset

,
\end_layout

\begin_layout Plain Layout

          
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

 if NUMERO < 0 else 
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresando una sucesión de 300 números enteros, determinar la cantidad de
 números.
 positivos que hay en ella.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-3.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

CONTADOR = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1,301):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if NUMERO >= 0:
\end_layout

\begin_layout Plain Layout

        CONTADOR += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se ingresaron
\begin_inset Quotes frd
\end_inset

, CONTADOR, 
\begin_inset Quotes fld
\end_inset

numeros positivos.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como datos 200 números enteros, obtener y mostrar su suma.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-4.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 201):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    SUMA += NUMERO
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, SUMA)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El mismo programa puede realizarse sin necesidad de asignar un valor a la
 variable numero, de la siguiente manera:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 201):
\end_layout

\begin_layout Plain Layout

    SUMA += int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, SUMA)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Para 1000 usuarios residenciales de energía eléctrica se cuenta con pares
 de valores que indican, para cada medidor, el consumo de Kilowatios al
 final del mes anterior y el consumo de Kilowatios al final del mes actual.
 Además se tiene el precio por Kilowatio.
 Exhibir, para cada usuario, el precio del Kilowatio, el consumo del mes
 y el importe a abonar.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-5.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\small}"
inline false
status open

\begin_layout Plain Layout

PRECIO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el precio del kilowatio: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for USUARIO in range(1,10001):
\end_layout

\begin_layout Plain Layout

    ANTERIOR = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese los kilowatios al fin del mes anterior: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    ACTUAL = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese los kilowatios al fin de mes actual: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Consumo del mes:
\begin_inset Quotes frd
\end_inset

, ACTUAL - ANTERIOR)
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Importe:
\begin_inset Quotes frd
\end_inset

, ACTUAL * PRECIO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Sabiendo que una carrera universitaria cuenta con X cantidad de materias,
 ingresar las notas con que un alumno aprobó cada una de las materias durante
 su carrera universitaria y finalmente mostrar la nota promedio de dicho
 alumno.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Calcular y exhibir la suma de los primeros 100 números naturales.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Ingresar dos números naturales.
 Verificar si el primero es menor que el segundo.
 En caso afirmativo mostrar todos los números comprendidos entre ellos en
 secuencia ascendente, incluyendo los extremos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Se dan como datos los importes de las 200 ventas de una librería.
 Se desea saber:
\end_layout

\begin_deeper
\begin_layout Itemize
Cuántas ventas tuvieron importes menores que $100.
\end_layout

\begin_layout Itemize
Cuál es el monto total de las ventas cuyo importe fue igual o mayor que
 $100.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Obtener la suma de los N números naturales posteriores al número 300 inclusive.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Generar e informar los primeros N múltiplos de un número M entero cualquiera.
 N y M son dos números que se ingresan como dato.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad desconocida de veces (WHILE)
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad desconocida de veces (REPEAT
 UNTIL)
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Selección Múltiple (CASE)
\end_layout

\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\end_body
\end_document
