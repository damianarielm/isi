#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\begin_modules
tcolorbox
\end_modules
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Algoritmos y Estructuras de Datos
\end_layout

\begin_layout Author
Práctica 1
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura secuencial
\end_layout

\begin_layout Enumerate
Modificando el siguiente ejemplo, agregar el cálculo del producto e informar
 los resultados:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1.png
	scale 40

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-1.png
	scale 40

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
La declarativa de variables como se ve en los diagramas aquí presentes es
 tanto correcta como frecuente.
 Desafortunadamente la cátedra lo considera incorrecto.
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N1       = int(input())
\end_layout

\begin_layout Plain Layout

N2       = int(input())
\end_layout

\begin_layout Plain Layout

SUMA     = N1 + N2
\end_layout

\begin_layout Plain Layout

PRODUCTO = N2 * N2
\end_layout

\begin_layout Plain Layout

print(SUMA)
\end_layout

\begin_layout Plain Layout

print(PRODUCTO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Describa lo que realiza el diagrama de Chapin.
 Indicar el valor que se muestra si las variables tendrían los siguientes
 valores: 
\begin_inset Formula $A=10$
\end_inset

, 
\begin_inset Formula $B=20$
\end_inset

 y 
\begin_inset Formula $C=2$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2.png
	scale 40

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
Muestra en la pantalla el resultado de sumar los primeros dos números ingresados
 y dividirlos por el tercero.
\end_layout

\end_deeper
\begin_layout Enumerate
Dados como datos cinco números obtener el promedio de los mismos e informar
 el resultado.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-3.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO4  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el cuarto numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO5  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el quinto numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA     = NUMERO1 + NUMERO2 + NUMERO3 + NUMERO4 + NUMERO5
\end_layout

\begin_layout Plain Layout

PROMEDIO = SUMA / 5
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

El promedio es:
\begin_inset Quotes erd
\end_inset

, PROMEDIO)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Existen varias formas de resolver cada algoritmo.
 La siguiente por ejemplo, es equivalente a la anterior pero utiliza una
 sola variable:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

PROMEDIO  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

)) / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el cuarto numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

PROMEDIO += int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el quinto numero: 
\begin_inset Quotes eld
\end_inset

))  / 5
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

El promedio es:
\begin_inset Quotes erd
\end_inset

, PROMEDIO)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como dos números obtener su suma, resta, multiplicación y división.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-4.png
	scale 32

\end_inset


\end_layout

\begin_layout Itemize
Python:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA     = NUMERO1 + NUMERO2
\end_layout

\begin_layout Plain Layout

RESTA    = NUMERO1 - NUMERO2
\end_layout

\begin_layout Plain Layout

PRODUCTO = NUMERO1 * NUMERO2
\end_layout

\begin_layout Plain Layout

DIVISION = NUMERO1 / NUMERO2
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La suma es:
\begin_inset Quotes erd
\end_inset

, SUMA)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La resta es:
\begin_inset Quotes erd
\end_inset

, RESTA)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La mutiplicacion es:
\begin_inset Quotes erd
\end_inset

, PRODUCTO)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes erd
\end_inset

La division es:
\begin_inset Quotes erd
\end_inset

, DIVISION)
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Dado un número mostrar el producto de ese número por 6, suponiendo que se
 cuenta solamente con el operador suma.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-5.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO   = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese un numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SEXTUPLE = NUMERO + NUMERO + NUMERO + NUMERO + NUMERO + NUMERO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El producto por 6 es:
\begin_inset Quotes erd
\end_inset

, SEXTUPLE)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dadas las medidas de dos ángulos de un triángulo, determinar la medida del
 tercero e informar el resultado.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-6.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

ANGULO1 = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el primer angulo: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO2 = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el segundo angulo: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO3 = 180 - ANGULO1 - ANGULO2
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El ángulo restante es:
\begin_inset Quotes erd
\end_inset

, ANGULO3)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado el valor del lado de un cuadrado, calcular su perímetro y su superficia,
 e informar los mismos con carteles aclaratorios.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-7.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

LADO       = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el lado: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

PERIMETRO  = LADO * 4
\end_layout

\begin_layout Plain Layout

SUPERFICIE = LADO * LADO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El perimetro es:
\begin_inset Quotes erd
\end_inset

, PERIMETRO)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

La superficie es:
\begin_inset Quotes erd
\end_inset

, SUPERFICIE)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado un número, mostrar el resultado de dicho número elevado a la octava.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-8.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N         = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

RESULTADO = N * N * N * N * N * N * N * N
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El resultado es:
\begin_inset Quotes erd
\end_inset

, RESULTADO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Tener en cuenta, que solo se reconocen 4 operaciones básicas.
 ¿Cual sería el algoritmo si la máquina cuenta además con la operación potencia?
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-9.png
	scale 37

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N         = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el numero: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

RESULTADO = N ** 8
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El resultado es:
\begin_inset Quotes erd
\end_inset

, RESULTADO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado como dato el importe neto de una factura, calcular el valor correspondiente
 al IVA (21%).
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-10.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NETO  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el importe neto: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

BRUTO = NETO / 1.21
\end_layout

\begin_layout Plain Layout

IVA   = NETO - BRUTO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El IVA es: 
\begin_inset Quotes erd
\end_inset

, IVA)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular el sueldo de un operario conociendo la cantidad de horas que trabajó
 en el mes y el jornal horario.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-11.png
	scale 35

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

HORAS  = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese las horas: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

JORNAL = int(input(
\begin_inset Quotes eld
\end_inset

Ingrese el jornal horario: 
\begin_inset Quotes eld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUELDO = HORAS * JORNAL
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

El sueldo es: 
\begin_inset Quotes erd
\end_inset

, SUELDO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Determinar el número de horas, minutos y segundos que hay en 6250 segundos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-12.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

SEGUNDOS = 6250
\end_layout

\begin_layout Plain Layout

MINUTOS  = SEGUNDOS / 60
\end_layout

\begin_layout Plain Layout

HORAS    = MINUTOS / 60
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Horas: 
\begin_inset Quotes eld
\end_inset

, HORAS)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Minutos: 
\begin_inset Quotes eld
\end_inset

, MINUTOS)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes eld
\end_inset

Segundos: 
\begin_inset Quotes eld
\end_inset

, SEGUNDOS)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado el importe bruto de una factura, calcular el resultado de bonificarlo
 (descuento) con un 
\begin_inset Formula $4\%$
\end_inset

.
 Al monto obtenido, calcularle el IVA (
\begin_inset Formula $21\%$
\end_inset

).
 Finalmente informar: el importe bruto, el valor de la bonificación, el
 importe bruto bonificado, el monto correspondiente al IVA y el importe
 neto resultante.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-13.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

BRUTO        = int(input("Ingrese el importe bruto: "))
\end_layout

\begin_layout Plain Layout

BONIFICACION = BRUTO * 4 / 100
\end_layout

\begin_layout Plain Layout

SUBTOTAL     = BRUTO - BONIFICACION
\end_layout

\begin_layout Plain Layout

IVA          = SUBTOTAL * 21 / 100
\end_layout

\begin_layout Plain Layout

NETO         = SUBTOTAL + IVA
\end_layout

\begin_layout Plain Layout

print("Bruto:", BRUTO)
\end_layout

\begin_layout Plain Layout

print("Bonificacion:", BONIFICACION)
\end_layout

\begin_layout Plain Layout

print("Subtotal:", SUBTOTAL)
\end_layout

\begin_layout Plain Layout

print("IVA:", IVA)
\end_layout

\begin_layout Plain Layout

print("neto:", NETO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular cuántos pesos tiene un banco en monedas si dispone de 
\begin_inset Formula $N1$
\end_inset

 monedas de 1 peso, 
\begin_inset Formula $N2$
\end_inset

 de medio peso, 
\begin_inset Formula $N3$
\end_inset

 de un cuarto de peso, 
\begin_inset Formula $N4$
\end_inset

 de 10 centavos y 
\begin_inset Formula $N5$
\end_inset

 de 5 centavos de peso.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-14.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

N1    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N2    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N3    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

N4    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N1: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

PESOS = N1 + N2 * 0.5 + N3 * 0.25 + N4 * 0.1
\end_layout

\begin_layout Plain Layout

print("$", PESOS)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar 3 valores en 3 variables 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

.
 Se desea obtener una rotación de sus valores, es decir que el contenido
 de 
\begin_inset Formula $Z$
\end_inset

 pase a 
\begin_inset Formula $X$
\end_inset

, el contenido de 
\begin_inset Formula $X$
\end_inset

 pase a 
\begin_inset Formula $Y$
\end_inset

, y el contenido de 
\begin_inset Formula $Y$
\end_inset

 pase a 
\begin_inset Formula $Z$
\end_inset

.
 Se debe mostrar las variables 
\begin_inset Formula $X,$
\end_inset

 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

 con sus valores originales y mostrar 
\begin_inset Formula $X$
\end_inset

, 
\begin_inset Formula $Y$
\end_inset

 y 
\begin_inset Formula $Z$
\end_inset

 con los valres luego de la rotación.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej1-15.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

X = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese X: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Y = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Y: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Z = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Z: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\begin_layout Plain Layout

T = X
\end_layout

\begin_layout Plain Layout

X = Z
\end_layout

\begin_layout Plain Layout

Z = Y
\end_layout

\begin_layout Plain Layout

Y = T
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Python ofrece una sintaxis mas cómoda para el intercambio de variables.
 El mismo programa puede realizarse de la siguiente manera:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

X = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese X: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Y = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Y: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

Z = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese Z: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\begin_layout Plain Layout

X, Y, Z = Z, X, Y
\end_layout

\begin_layout Plain Layout

print("X, Y, Z:", X, Y, Z)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Indicar cómo será la salida luego de realizar lo pedido en el ejercicio
 anterior, si se ingresa 10 en la variable 
\begin_inset Formula $X$
\end_inset

, 15 en la variable 
\begin_inset Formula $Y$
\end_inset

 y 20 en la variable 
\begin_inset Formula $Z$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

X:  10
\end_layout

\begin_layout Plain Layout

Y:  15
\end_layout

\begin_layout Plain Layout

Z:  20
\end_layout

\begin_layout Plain Layout

X:  20
\end_layout

\begin_layout Plain Layout

Y:  10
\end_layout

\begin_layout Plain Layout

Z:  15
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Desición Simple (IF)
\end_layout

\begin_layout Enumerate
Dados dos números distintos, mostrarlos ordenados en forma creciente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Los numeros en orden son: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

if NUMERO1 < NUMERO2:
\end_layout

\begin_layout Plain Layout

    print(NUMERO1, NUMERO2)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(NUMERO2, NUMERO1)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dado un número determinar si es positivo o negativo.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-2.png
	scale 39

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO < 0:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero es negativo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero es positivo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dada la medida de cada uno de los tres ángulos de un triángulo determinar
 e informar mediante un mensaje si pertenecen o no a un triángulo rectángulo
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -4.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-3.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

ANGULO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

ANGULO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer angulo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA    = ANGULO1 + ANGULO2 + ANGULO3
\end_layout

\begin_layout Plain Layout

if SUMA == 180 and ANGULO1 > 0 and ANGULO2 > 0 and ANGULO3 > 0:
\end_layout

\begin_layout Plain Layout

    if ANGULO1 == 90 or ANGULO2 == 90 or ANGULO3 == 90:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

Es un triangulo rectangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

No es un triangulo rectangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

No es un triangulo
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar tres números enteros distintos.
 Determinar y mostrar si ingresaron en orden creciente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -3cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-4.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO1 <= NUMERO2 and NUMERO2 <= NUMERO3:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Los numeros se ingresaron en orden.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Los numeros no se ingresaron en orden.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Determinar si el primero de un conjunto de tres números dados, es menor
 que los otros dos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -3cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-5.png
	scale 38

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\footnotesize}"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO1 < NUMERO2 and NUMERO1 < NUMERO3:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El primer numero es menor que los otros.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El primer numero no es menor que los otros.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar tres letras mayúsculas y mostrarlas ordenadas alfabéticamente.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: Existen múltiples formas de resolver este algoritmo, la mas evidente
 utiliza múltiples estructuras de decisión simple anidadas.
 La que muestro a continuación utiliza estructuras de decisión simple secuencial
es, lo cual considero mas simple.
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-6.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la primer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L2 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la segunda letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L3 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la tercer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 < L2 and L2 < L3:
\end_layout

\begin_layout Plain Layout

    print(L1, L2, L3)
\end_layout

\begin_layout Plain Layout

if L1 < L3 and L3 < L2:
\end_layout

\begin_layout Plain Layout

    print(L1, L3, L2)
\end_layout

\begin_layout Plain Layout

if L2 < L1 and L1 < L3:
\end_layout

\begin_layout Plain Layout

    print(L2, L1, L3)
\end_layout

\begin_layout Plain Layout

if L2 < L3 and L3 < L1:
\end_layout

\begin_layout Plain Layout

    print(L2, L3, L1)
\end_layout

\begin_layout Plain Layout

if L3 < L1 and L1 < L2:
\end_layout

\begin_layout Plain Layout

    print(L3, L1, L2)
\end_layout

\begin_layout Plain Layout

if L3 < L2 and L2 < L1:
\end_layout

\begin_layout Plain Layout

    print(L3, L2, L1)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Como alternativa al anterior algoritmo, se presenta el siguiente programa
 que solo utiliza 3 estructuras de decisión simple.
 Dicho algoritmo se llama 
\begin_inset Quotes fld
\end_inset

ordenamiento burbuja
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la primer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L2 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la segunda letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

L3 = input(
\begin_inset Quotes fld
\end_inset

Ingrese la tercer letra: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 > L2:
\end_layout

\begin_layout Plain Layout

  L1, L2 = L2, L1
\end_layout

\begin_layout Plain Layout

if L2 > L3:
\end_layout

\begin_layout Plain Layout

  L2, L3 = L3, L2
\end_layout

\begin_layout Plain Layout

if L1 > L2:
\end_layout

\begin_layout Plain Layout

  L1, L2 = L2, L1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(L1, L2, L3)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se desea controlar en una fábrica la calidad de dos tipos de piezas que
 denominaremos A y B.
\end_layout

\begin_deeper
\begin_layout Standard
Se dan como datos el tipo de pieza y su medida en milímetros y se debe indicar
 si cumple con las especificaciones sabiendo que: 
\end_layout

\begin_layout Itemize
Las piezas de tipo A deben medir 165 mm y se admite un error de +/-2 mm.
\end_layout

\begin_layout Itemize
Las piezas de tipo B deben medir 180 mm y se admite un error de +/-3 mm.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -5.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-7.png
	scale 35

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TIPO   = input(
\begin_inset Quotes fld
\end_inset

Ingrese el tipo de pieza: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

MEDIDA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese la medida de la pieza: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if TIPO == 
\begin_inset Quotes fld
\end_inset

A
\begin_inset Quotes frd
\end_inset

 and 163 <= MEDIDA and MEDIDA <= 167:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

elif TIPO == 
\begin_inset Quotes fld
\end_inset

B
\begin_inset Quotes frd
\end_inset

 and 177 <= MEDIDA and MEDIDA <= 183:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

La pieza no cumple la especificacion.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se leen tres números positivos.
 Determinar si son las longitudes de los lados de un triángulo: Recordar
 que en todo triangulo cada lado es menor o igual que la suma de los otros
 dos y menor que su diferencia (basta mostrarlo para un lado).
 En caso afirmativo, informar si el mismo es equilátero (3 lados iguales),
 isósceles (2 lados iguales) o escaleno (3 lados distintos).
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El enunciado que da origen al problema, y la supuesta solución que brindó
 la cátedra no determinan en forma correcta algunos triángulos.
 La solución que se presenta a continuación es correcta.
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -5.25cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-8.png
	scale 33

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

L1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

L2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

L3 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el tercer lado: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if L1 + L2 <= L3 or L1 + L3 <= L2 or L2 + L3 <= L1:
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

No es un triangulo.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    if L1 == L2 and L2 == L3:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo equilatero.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    elif L1 == L2 or L1 == L3 or L2 == L3:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo isoceles.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

	    print(
\begin_inset Quotes fld
\end_inset

Es un triangulo escaleno.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Una distribuidora de libros vende a librerías y a particulares.
 Aplica bonificaciones por cantidad según el siguiente criterio:
\end_layout

\begin_deeper
\begin_layout Itemize
Librerías: hasta 24 unidades, el 20%; más de 24 unidades, el 25%.
\end_layout

\begin_layout Itemize
Particulares: menos de 6 unidades, nada; desde 6 hasta 18 unidades, el 5%;
 y más de 18 unidades, el 10%.
\end_layout

\begin_layout Standard
El tipo de cliente está codificado: 
\begin_inset Quotes fld
\end_inset

L
\begin_inset Quotes frd
\end_inset

 para librerías y 
\begin_inset Quotes fld
\end_inset

P
\begin_inset Quotes frd
\end_inset

 para particular.
 Dado el importe bruto total de una compra de libros, el tipo de cliente
 y la cantidad total pedida por el mismo, determinar el importe bruto bonificado.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -1.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej2-9.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TIPO     = input(
\begin_inset Quotes fld
\end_inset

Ingrese el tipo de cliente: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

IMPORTE  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el importe bruto: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

CANTIDAD = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese la cantidad de unidades: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if TIPO == 
\begin_inset Quotes fld
\end_inset

L
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

    if CANTIDAD <= 24:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 20
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 25
\end_layout

\begin_layout Plain Layout

else:
\end_layout

\begin_layout Plain Layout

    if CANTIDAD < 6:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 0
\end_layout

\begin_layout Plain Layout

    elif CANTIDAD <= 18:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 5
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        BONIFICACION = 10
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

IMPORTEB = IMPORTE - (IMPORTE * BONIFICACION / 100)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El importe bonificado es:
\begin_inset Quotes frd
\end_inset

, IMPORTEB)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
11)
\end_layout

\end_inset

Dado como dato la cantidad de kilowatios consumidos por un usuario en un
 mes, calcular el importe a pagar por el mismo teniendo en cuenta que: 
\end_layout

\begin_deeper
\begin_layout Itemize
Si la cantidad de kilowatios consumidos es menor ó igual a 200, el precio
 del kilowatio es de 0.05 pesos.
\end_layout

\begin_layout Itemize
Si la cantidad de kilowatios consumidos es mayor que 200 y menor que 1000,
 el precio del kilowatio es de 0.1 pesos.
\end_layout

\begin_layout Itemize
Si la cantidad de kilowatios consumidos es mayor ó igual que 1000, el precio
 del kilowatio es de 0.15 pesos.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
12)
\end_layout

\end_inset

 Se ingresan seis números positivos diferentes.
 Al final mostrar un cartel que diga: 
\begin_inset Quotes fld
\end_inset

El mayor número ingresado fue el xxx
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-12.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El mismo programa puede realizarse con solo dos variables, si en vez de
 solicitar toda la entrada y luego computar, computamos la salida a medida
 que obtenemos la entrada.
\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Imagenes/ej2-12-alt.png
	scale 40

\end_inset


\end_layout

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYOR  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 1er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 2do numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 3er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 4to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 5to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 6to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mayor es:
\begin_inset Quotes frd
\end_inset

, MAYOR)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
13)
\end_layout

\end_inset

El mismo que el anterior, pero indicar la posición en que entró el mayor.
 (Ej.
 
\begin_inset Quotes fld
\end_inset

El mayor fue xx y fue ingresado quinto
\begin_inset Quotes frd
\end_inset

).
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej2-13.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYOR  = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 1er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

POSICION = 1
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 2do numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 2
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 3er numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 3
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 4to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 4
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 5to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 5
\end_layout

\begin_layout Plain Layout

NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el 6to numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

    MAYOR = NUMERO
\end_layout

\begin_layout Plain Layout

    POSICION = 6
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mayor es:
\begin_inset Quotes frd
\end_inset

, MAYOR, 
\begin_inset Quotes fld
\end_inset

y la posicion es
\begin_inset Quotes frd
\end_inset

, POSICION)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
14)
\end_layout

\end_inset

 Se dan dos valores cualesquiera enteros.
 Si el primero es mayor que el segundo, restarle al primero un 20%, pero
 si el segundo es el mayor restarle al segundo un 15%.
 Con estos nuevos valores, si el primero quedo mayor a 100 y el segundo
 mayor a 150, se lo consideran valores correctos, de lo contrario es un
 intervalo de riesgo.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad conocida de veces (FOR)
\end_layout

\begin_layout Enumerate
Calcular el sueldo de cada uno de los 50 operarios de una fábrica dados
 como datos la remuneración por hora (es la misma para todos los operarios)
 y la cantidad de horas que trabajó en el mes cada operario.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

REMUNERACION = int(input("Ingrese remuneracion por hora: "))
\end_layout

\begin_layout Plain Layout

for OPERARIO in range(1,5):
\end_layout

\begin_layout Plain Layout

    print("Ingrese cantidad de horas operario", OPERARIO)
\end_layout

\begin_layout Plain Layout

    HORAS = int(input())
\end_layout

\begin_layout Plain Layout

    print("Sueldo:", HORAS * REMUNERACION)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como datos 100 números enteros, mostrar cada uno de ellos indicando
 si es 
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

 ó 
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

, según corresponda.
 
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-2.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

for DATO in range(1, 100):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero
\begin_inset Quotes frd
\end_inset

, NUMERO, 
\begin_inset Quotes fld
\end_inset

es
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    if NUMERO < 0:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
En Python puede utilizarse una estructura de desición simple como expresión.
 El siguiente programa es equivalente al anterior:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

for DATO in range(1, 100):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

El numero
\begin_inset Quotes frd
\end_inset

, NUMERO, 
\begin_inset Quotes fld
\end_inset

es
\begin_inset Quotes frd
\end_inset

,
\end_layout

\begin_layout Plain Layout

          
\begin_inset Quotes fld
\end_inset

NEGATIVO
\begin_inset Quotes frd
\end_inset

 if NUMERO < 0 else 
\begin_inset Quotes fld
\end_inset

POSITIVO
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresando una sucesión de 300 números enteros, determinar la cantidad de
 números.
 positivos que hay en ella.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-3.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

CONTADOR = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1,301):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if NUMERO >= 0:
\end_layout

\begin_layout Plain Layout

        CONTADOR += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se ingresaron
\begin_inset Quotes frd
\end_inset

, CONTADOR, 
\begin_inset Quotes fld
\end_inset

numeros positivos.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Dados como datos 200 números enteros, obtener y mostrar su suma.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-4.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 201):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    SUMA += NUMERO
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, SUMA)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El mismo programa puede realizarse sin necesidad de asignar un valor a la
 variable numero, de la siguiente manera:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 201):
\end_layout

\begin_layout Plain Layout

    SUMA += int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, SUMA)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Para 1000 usuarios residenciales de energía eléctrica se cuenta con pares
 de valores que indican, para cada medidor, el consumo de Kilowatios al
 final del mes anterior y el consumo de Kilowatios al final del mes actual.
 Además se tiene el precio por Kilowatio.
 Exhibir, para cada usuario, el precio del Kilowatio, el consumo del mes
 y el importe a abonar.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-5.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\small}"
inline false
status open

\begin_layout Plain Layout

PRECIO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el precio del kilowatio: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for USUARIO in range(1,10001):
\end_layout

\begin_layout Plain Layout

    ANTERIOR = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese los kilowatios al fin del mes anterior: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    ACTUAL = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese los kilowatios al fin de mes actual: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Consumo del mes:
\begin_inset Quotes frd
\end_inset

, ACTUAL - ANTERIOR)
\end_layout

\begin_layout Plain Layout

    print(
\begin_inset Quotes fld
\end_inset

Importe:
\begin_inset Quotes frd
\end_inset

, ACTUAL * PRECIO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Sabiendo que una carrera universitaria cuenta con X cantidad de materias,
 ingresar las notas con que un alumno aprobó cada una de las materias durante
 su carrera universitaria y finalmente mostrar la nota promedio de dicho
 alumno.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-6.png
	scale 40

\end_inset


\end_layout

\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

X = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese cantidad de materias: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, X + 1):
\end_layout

\begin_layout Plain Layout

    NOTA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese una nota: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    SUMA += NOTA
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El promedio es:
\begin_inset Quotes frd
\end_inset

, SUMA / X)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular y exhibir la suma de los primeros 100 números naturales.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-7.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for NUMERO in range(1, 101):
\end_layout

\begin_layout Plain Layout

    SUMA += NUMERO
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, NUMERO)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
La función 
\family typewriter
sum
\family default
 de Python permite hacer el mismo programa de forma mas sencilla:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, sum(range(101)))
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresar dos números naturales.
 Verificar si el primero es menor que el segundo.
 En caso afirmativo mostrar todos los números comprendidos entre ellos en
 secuencia ascendente, incluyendo los extremos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-8.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

NUMERO1 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el primer numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

NUMERO2 = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el segundo numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

if NUMERO1 < NUMERO2:
\end_layout

\begin_layout Plain Layout

    for NUMERO in range(NUMERO1, NUMERO2 + 1):
\end_layout

\begin_layout Plain Layout

        print(NUMERO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se dan como datos los importes de las 200 ventas de una librería.
 Se desea saber:
\end_layout

\begin_deeper
\begin_layout Itemize
Cuántas ventas tuvieron importes menores que $100.
\end_layout

\begin_layout Itemize
Cuál es el monto total de las ventas cuyo importe fue igual o mayor que
 $100.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-9.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

CONTADOR = 0
\end_layout

\begin_layout Plain Layout

TOTAL    = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1,101):
\end_layout

\begin_layout Plain Layout

    IMPORTE = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un importe: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if IMPORTE < 100:
\end_layout

\begin_layout Plain Layout

        CONTADOR += 1
\end_layout

\begin_layout Plain Layout

    else:
\end_layout

\begin_layout Plain Layout

        TOTAL += IMPORTE
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hubo
\begin_inset Quotes frd
\end_inset

, CONTADOR, 
\begin_inset Quotes fld
\end_inset

ventas menores que 100.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El total de las restantes es:
\begin_inset Quotes frd
\end_inset

, TOTAL)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Obtener la suma de los N números naturales posteriores al número 300 inclusive.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-10.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

N    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(300, 300 + N + 1):
\end_layout

\begin_layout Plain Layout

    SUMA += I
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, SUMA)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Generar e informar los primeros N múltiplos de un número M entero cualquiera.
 N y M son dos números que se ingresan como dato.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-11.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

N    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese N: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

M    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese M: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, N):
\end_layout

\begin_layout Plain Layout

    print(M * I)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Ingresado un número 
\begin_inset Formula $X$
\end_inset

, calcular 
\begin_inset Formula $X^{5}$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-12.png
	scale 40

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

X      = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

QUINTA = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 6):
\end_layout

\begin_layout Plain Layout

    QUINTA *= X
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La quinta potencia es:
\begin_inset Quotes frd
\end_inset

, QUINTA)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Calcular y exhibir el factorial de un número cualquiera ingresado por teclado.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-13.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

X         = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

FACTORIAL = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, X + 1):
\end_layout

\begin_layout Plain Layout

    FACTORIAL *= I
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El factorial es:
\begin_inset Quotes frd
\end_inset

, FACTORIAL)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
15.
\end_layout

\end_inset

Generar e informar los primeros 23 términos de la sucesión de Fibonacci.
 Tener en cuenta que los dos primeros términos son iguales a uno y que los
 restantes se obtienen como la suma de los dos anteriores.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-15.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

print(1)
\end_layout

\begin_layout Plain Layout

print(1)
\end_layout

\begin_layout Plain Layout

FNMENOS2 = 1
\end_layout

\begin_layout Plain Layout

FNMENOS1 = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for i in range(3,24):
\end_layout

\begin_layout Plain Layout

    FN = FNMENOS1 + FNMENOS2
\end_layout

\begin_layout Plain Layout

    print(FN)
\end_layout

\begin_layout Plain Layout

    FNMENOS2, FNMENOS1 = FNMENOS1, FN
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
16.
\end_layout

\end_inset

Dada una lista de 93 números, determinar e informar el valor máximo y el
 orden en el que fue ingresado.
 
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-16.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYOR    = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

POSICION = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(2, 94):
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese otro numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if NUMERO > MAYOR:
\end_layout

\begin_layout Plain Layout

        MAYOR, POSICION = NUMERO, I
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mayor es
\begin_inset Quotes frd
\end_inset

, MAYOR, 
\begin_inset Quotes fld
\end_inset

y fue ingresado
\begin_inset Quotes frd
\end_inset

, POSICION)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
17.
\end_layout

\end_inset

Incorporar al ejercicio anterior la búsqueda del valor mínimo y el orden
 en el que fueron ingresados.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
18.
\end_layout

\end_inset

Una escuela realiza un control sobre el estado físico de sus 304 alumnos.
 Dispone de los números de legajos y estatura (en cms.) de cada uno de ellos.
 Se requiere saber el promedio de estatura, así como los números de legajos
 de los alumnos de estatura inferior a 165 cms.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-18.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

SUMA = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(1, 305):
\end_layout

\begin_layout Plain Layout

    LEGAJO   = input(
\begin_inset Quotes fld
\end_inset

Ingrese legajo: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

    ESTATURA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese estatura: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    SUMA += ESTATURA
\end_layout

\begin_layout Plain Layout

    if ESTATURA < 165:
\end_layout

\begin_layout Plain Layout

        print(
\begin_inset Quotes fld
\end_inset

Legajo
\begin_inset Quotes frd
\end_inset

, LEGAJO, 
\begin_inset Quotes fld
\end_inset

menor de 165cm.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El promedio de estatura es: 
\begin_inset Quotes fld
\end_inset

, SUMA / 304)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
19.
\end_layout

\end_inset

Dada una sucesión de N números enteros ordenados en forma creciente, no
 consecutivos, hallar la máxima diferencia entre dos números sucesivos.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
20.
\end_layout

\end_inset

Una comisión tiene 55 alumnos, de cada uno de los cuales se tienen las notas
 de los 6 parciales que han rendido.
 Obtener el promedio de las notas de cada uno de los alumnos.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
21.
\end_layout

\end_inset

Se tienen los siguientes datos de los N socios de un club:
\end_layout

\begin_deeper
\begin_layout Itemize
Número de socio
\end_layout

\begin_layout Itemize
Edad
\end_layout

\begin_layout Itemize
Sexo (F o M)
\end_layout

\begin_layout Itemize
Importe de la cuota
\end_layout

\begin_layout Standard
Se queire saber:
\end_layout

\begin_layout Enumerate
Cantidad de mujeres y cantidad de hombres
\end_layout

\begin_layout Enumerate
Promedio de edad de todos los socios
\end_layout

\begin_layout Enumerate
Total recaudado por el club en concepto de cuotas
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
22.
\end_layout

\end_inset

Se cuenta con un texto de 190 caracteres.
 Determinar cuantas veces aparece la sílaba 
\begin_inset Quotes fld
\end_inset

pa
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej3-22.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TEXTO    = input(
\begin_inset Quotes fld
\end_inset

Ingrese un texto: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

CONTADOR = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(len(TEXTO) - 1):
\end_layout

\begin_layout Plain Layout

    if TEXTO[I] == 
\begin_inset Quotes fld
\end_inset

p
\begin_inset Quotes frd
\end_inset

 and TEXTO[I + 1] == 
\begin_inset Quotes fld
\end_inset

a
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

        CONTADOR += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(CONTADOR)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
El operador de 
\begin_inset Quotes fld
\end_inset

slicing
\begin_inset Quotes frd
\end_inset

 en Python, nos permite escribir la misma condición en forma mas sencilla.
 El mismo programa quedaría así:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TEXTO    = input("Ingrese un texto: ")
\end_layout

\begin_layout Plain Layout

CONTADOR = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for I in range(len(TEXTO) - 1):
\end_layout

\begin_layout Plain Layout

    if TEXTO[I:I+2] == "pa":
\end_layout

\begin_layout Plain Layout

        CONTADOR += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(CONTADOR)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Argument item:1
status open

\begin_layout Plain Layout
23.
\end_layout

\end_inset

Una empresa está dividida en 10 secciones.
 Para cada una de ellas se tienen como datos: 
\end_layout

\begin_deeper
\begin_layout Itemize
Nro.
 de sección
\end_layout

\begin_layout Itemize
Cantidad de empleados que trabajan en ella
\end_layout

\begin_layout Standard
Para cada empleado se tiene como dato:
\end_layout

\begin_layout Itemize
Cantidad de horas trabajadas
\end_layout

\begin_layout Itemize
Turno de trabajo (
\begin_inset Quotes fld
\end_inset

M
\begin_inset Quotes frd
\end_inset

: mañana, 
\begin_inset Quotes fld
\end_inset

T
\begin_inset Quotes frd
\end_inset

: tarde)
\end_layout

\begin_layout Standard
Se desea saber:
\end_layout

\begin_layout Itemize
El promedio de horas trabajadas en cada sección.
\end_layout

\begin_layout Itemize
La cantidad total de horas trabajadas en cada turno de la empresa.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad desconocida de veces (WHILE)
\end_layout

\begin_layout Enumerate
Dado un conjunto de números enteros, determinar cuántos de ellos son mayores
 ó iguales que 100.
 Un número igual a cero indica fin de datos.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej4-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYORES, NUMERO = 0, 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while NUMERO != 0:
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if NUMERO >= 100:
\end_layout

\begin_layout Plain Layout

        MAYORES += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hubo
\begin_inset Quotes frd
\end_inset

, MAYORES, 
\begin_inset Quotes fld
\end_inset

numeros mayores o iguales a 100.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se tienen como dato los importes de todas las facturas correspondientes
 al mes que acaba de finalizar de un comercio (no se sabe cuántas son).
 Se desea conocer:
\end_layout

\begin_deeper
\begin_layout Itemize
Cuántas ventas se realizaron
\end_layout

\begin_layout Itemize
Importe promedio de las mismas
\end_layout

\begin_layout Itemize
Cuántos son los importes que superan los 30 pesos
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej4-2.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MAYORES, VENTAS, PROMEDIO, VENTA = 0, 0, 0, 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while VENTA != 0:
\end_layout

\begin_layout Plain Layout

    VENTA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese una venta: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if VENTA != 0:
\end_layout

\begin_layout Plain Layout

        PROMEDIO += VENTA
\end_layout

\begin_layout Plain Layout

        VENTAS += 1
\end_layout

\begin_layout Plain Layout

    if VENTA >= 30:
\end_layout

\begin_layout Plain Layout

        MAYORES += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hubo
\begin_inset Quotes frd
\end_inset

, VENTAS, 
\begin_inset Quotes fld
\end_inset

ventas.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El promedio fue:
\begin_inset Quotes frd
\end_inset

, PROMEDIO / VENTAS)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Hubo
\begin_inset Quotes frd
\end_inset

, MAYORES, 
\begin_inset Quotes fld
\end_inset

ventas mayores a 30.
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se van ingresando números distintos de cero, salvo el último valor.
 Determinar su suma.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej4-3.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

NUMERO, SUMA = 0, 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while NUMERO != 0:
\end_layout

\begin_layout Plain Layout

    NUMERO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese un numero: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    SUMA += NUMERO
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

La suma es:
\begin_inset Quotes frd
\end_inset

, NUMERO)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se cuenta con la información brindada por un conjunto de vendedores.
 Por cada uno de ellos se ingresa su código (un carácter distinto de 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

) y el importe total de sus ventas.
 Determinar el código del vendedor con mayor importe vendido y dicho importe.
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej4-4.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

CODIGO, TOTALMAYOR = 
\begin_inset Quotes fld
\end_inset


\begin_inset Quotes frd
\end_inset

, 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while CODIGO != 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

    CODIGO = input(
\begin_inset Quotes fld
\end_inset

Ingrese el codigo de vendedor: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

    if CODIGO != 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

        TOTAL = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese el total vendido: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

        if TOTAL > TOTALMAYOR:
\end_layout

\begin_layout Plain Layout

            CODIGOMAYOR, TOTALMAYOR = CODIGO, TOTAL
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El mejor vendedor fue
\begin_inset Quotes frd
\end_inset

, CODIGOMAYOR, 
\begin_inset Quotes fld
\end_inset

con
\begin_inset Quotes frd
\end_inset

, TOTALMAYOR)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se dispone de una serie de importes y para cada uno es necesario saber si
 se aplica o no un descuento.
 En caso afirmativo, calcular el importe del mismo.
\end_layout

\begin_deeper
\begin_layout Standard
El criterio es el siguiente: para importes menores o iguales que 85, no
 se hace descuento y para importes mayores, se hace el 5 % de descuento.
\end_layout

\begin_layout Standard
Informar cada importe (nunca cero) con su correspondiente descuento y, al
 final, el porcentaje que representa la cantidad de importes que tuvieron
 descuento, con respecto a la cantidad total de importes.
 
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Una empresa tiene 50 viajantes que trabajan en ella.
 A fin de mes cada uno de los viajantes informa su número y los importes
 de cada una de las ventas realizadas.
 No se sabe la cantidad de ventas que realizó cada uno de ellos por lo que
 un valor de venta igual a cero indica que no hay más ventas de ese vendedor.
 Se pide exhibir, para cada uno de los viajantes, el Nro.
 del viajante y el importe de la mayor venta realizada por el mismo.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Al finalizar cada día, los vendedores de un comercio rinden al dueño sus
 ventas para calcular la comisión que cobrarán.
 Los vendedores son 8, codificados de la 
\begin_inset Quotes fld
\end_inset

A
\begin_inset Quotes frd
\end_inset

 a la 
\begin_inset Quotes fld
\end_inset

H
\begin_inset Quotes frd
\end_inset

, y no se sabe cuántas ventas realizó cada uno.
 Los datos vienen ordenados y agrupados por vendedor.
 Por cada vendedor se ingresan cada uno de los importes de sus ventas.
 Para indicar el fin de cada uno de ellos se ingresa un valor de venta igual
 a 0.
 Se solicita mostrar para cada uno de los vendedores: su código y la comisión
 que cobrará, que es el 2,5% de la suma de sus ventas.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Se desea saber el total de ventas de cada uno de los vendedores de una empresa.
 A tal fin se tienen como datos: el código de vendedor y el importe de cada
 una de las ventas; un vendedor puede haber realizado más de una venta.
 No se sabe la cantidad de vendedores que tiene la empresa ni la cantidad
 de ventas hechas por cada vendedor (un código de vendedor igual a cero
 es fin de datos).
 ESTOS DATOS ESTAN ORDENADOS POR CODIGO DE VENDEDOR.
 Exhibir cada código de vendedor y su total correspondiente y al final,
 el código de vendedor con mayor importe vendido y dicho importe.
 
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Ingresar una secuencia ordenada alfabéticamente de letras con repeticiones.
 Informar cada carácter y la cantidad de veces que aparece en la lista.
 La secuencia finaliza con un 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
De cada uno de los alumnos de primer año de la facultad se tienen los siguientes
 datos: Nº de comisión y nota del parcial.
\end_layout

\begin_deeper
\begin_layout Standard
No se sabe la cantidad de comisiones ni la cantidad de alumnos por comisión.
 Los datos están ordenados por comisión.
 Determinar, para cada una de las comisiones, el número de comisión y el
 promedio de las notas de dicho parcial.
 
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Del reloj de marcación del personal de una empresa se tienen los siguientes
 datos: día, DNI y cantidad de horas trabajadas.
 Se desea conocer:
\end_layout

\begin_deeper
\begin_layout Itemize
Por día, quien trabajó la mayor cantidad de horas y el promedio de horas
 trabajadas.
\end_layout

\begin_layout Itemize
La cantidad total de horas trabajadas.
\end_layout

\begin_layout Standard
Los datos vienen ordenados por día y la carga de datos termina al ingresar
 el día en 0.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Una empresa de alquiler de autos, los clasifica en categorías (20 categorías
 numéricas en total).
 Se tiene una planilla donde se encuentran, ordenados por categoría, de
 cada viaje realizado por cada auto: la categoría, el kilometraje recorrido
 y el monto del viaje.
 Se pide:
\end_layout

\begin_deeper
\begin_layout Itemize
Obtener el total de kilómetros recorridos por cada categoría.
\end_layout

\begin_layout Itemize
La categoría que haya realizado el viaje de mayor monto.
 
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Iteración o repetición con cantidad desconocida de veces (REPEAT
 UNTIL)
\end_layout

\begin_layout Enumerate
Determinar cuántos caracteres tiene un conjunto de elementos, sabiendo que
 el último carácter perteneciente al conjunto es una 
\begin_inset Quotes fld
\end_inset

S
\begin_inset Quotes frd
\end_inset

, y que ésta letra aparece sólo una vez.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Graphics
	filename Imagenes/ej5-1.png
	scale 40

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TOTAL, C = 0, 
\begin_inset Quotes fld
\end_inset


\begin_inset Quotes frd
\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while C != 
\begin_inset Quotes fld
\end_inset

S
\begin_inset Quotes frd
\end_inset

:
\end_layout

\begin_layout Plain Layout

    C = input(
\begin_inset Quotes fld
\end_inset

Ingrese un caracter: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

    TOTAL += 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El conjunto tiene
\begin_inset Quotes frd
\end_inset

, TOTAL, 
\begin_inset Quotes fld
\end_inset

caracteres
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
La estructura de control de flujo Repeat no existe en Python.
 Puede simularse de la siguiente manera:
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

TOTAL = 0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while True:
\end_layout

\begin_layout Plain Layout

    C = input(
\begin_inset Quotes fld
\end_inset

Ingrese un caracter: 
\begin_inset Quotes fld
\end_inset

)
\end_layout

\begin_layout Plain Layout

    TOTAL += 1
\end_layout

\begin_layout Plain Layout

    if C == 
\begin_inset Quotes fld
\end_inset

S
\begin_inset Quotes frd
\end_inset

: break # Condicion de corte
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

El conjunto tiene
\begin_inset Quotes frd
\end_inset

, TOTAL, 
\begin_inset Quotes fld
\end_inset

caracteres
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
Sin embargo debe evitarse siempre que se pueda utilizar True como condición,
 o utilizar break; razón por la cual es preferible escribirlo con el enfoque
 anterior.
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se dispone de una planilla con los sueldos a pagar a los empleados de una
 empresa.
 Se desea conocer cuál es el sueldo promedio que se debe abonar.
 Como no se conoce la cantidad de empleados, luego de ingresar cada sueldo
 deberá aparecer en la pantalla el siguiente cartel: 
\begin_inset Quotes fld
\end_inset

¿Continúa o finaliza? (C-F)
\begin_inset Quotes frd
\end_inset

; el operador entonces deberá ingresar un 
\begin_inset Quotes fld
\end_inset

C
\begin_inset Quotes frd
\end_inset

 o una 
\begin_inset Quotes fld
\end_inset

F
\begin_inset Quotes frd
\end_inset

, según quiera continuar ingresando datos o no.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Evaluar y tabular la función 
\begin_inset Formula $f\left(x\right)=3x+2$
\end_inset

 para diferentes valores de 
\begin_inset Formula $x$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Realizar un proceso que confeccione una factura de compra, ingresando el
 código de artículo, la cantidad comprada del mismo y su precio unitario.
 Proponer fin de datos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Se tiene una cadena de 350 caracteres, se desea encontrar el primer punto
 y coma (;) y el lugar que ocupa en la cadena.
 En caso de no encontrar ninguna, aclarar mediante un cartel.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Dada una sucesión de N (cantidad) números enteros, indicar la posición del
 primer negativo, en caso de no encontrar ninguno, exhibir cartel aclaratorio.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Dada una lista de espera de pasajeros de un micro, donde se indica el peso
 del equipaje de cada uno de ellos, deberá determinarse cuántas personas
 viajarán en el mismo de acuerdo a las siguientes condiciones:
\end_layout

\begin_deeper
\begin_layout Itemize
El peso del equipaje total no debe superar los 3500 kgs.
\end_layout

\begin_layout Itemize
No se permiten pasajeros de pie.
\end_layout

\begin_layout Standard
Para lo cual se tiene además los siguientes datos del micro: número del
 mismo y cantidad de asientos.
\end_layout

\begin_layout Standard
Exhibir el número del micro y la cantidad de pasajeros.
 Indicar además si el micro va completo.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Informar si los valores de un conjunto de N (validar que N sea mayor ó igual
 que 2) números están ordenados de mayor a menor.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Estructura de Selección Múltiple (CASE)
\end_layout

\begin_layout Enumerate
Se dispone del conjunto de facturas emitidas por un restaurante.
 De cada factura se tienen los siguientes datos:
\end_layout

\begin_deeper
\begin_layout Itemize
Nro.
 de factura (nro entero cualquiera)
\end_layout

\begin_layout Itemize
Nro.
 de mozo que atendió (1..5)
\end_layout

\begin_layout Itemize
Importe
\end_layout

\begin_layout Standard
Las facturas están desordenadas y no se sabe cuántas son.
 Se desea saber la comisión que se deberá pagar a cada uno de los 5 mozos.
 Cada uno de ellos recibe el 5% del importe total que facturó.
 Con número de factura igual a 0 se indica fin de datos.
\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -3cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej6-1.png
	scale 33

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

MOZO1 = MOZO2 = MOZO3 = MOZO4 = MOZO5 = 0
\end_layout

\begin_layout Plain Layout

FACTURA = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while FACTURA != 0:
\end_layout

\begin_layout Plain Layout

    FACTURA = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese numero de factura: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

    if FACTURA != 0:
\end_layout

\begin_layout Plain Layout

        MOZO = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese numero de mozo: 
\begin_inset Quotes fld
\end_inset

))
\end_layout

\begin_layout Plain Layout

        IMPORTE = int(input(
\begin_inset Quotes fld
\end_inset

Ingrese importe: 
\begin_inset Quotes frd
\end_inset

))
\end_layout

\begin_layout Plain Layout

        if MOZO == 1:
\end_layout

\begin_layout Plain Layout

            MOZO1 += IMPORTE
\end_layout

\begin_layout Plain Layout

        elif MOZO == 2:
\end_layout

\begin_layout Plain Layout

            MOZO2 += IMPORTE
\end_layout

\begin_layout Plain Layout

        elif MOZO == 3:
\end_layout

\begin_layout Plain Layout

            MOZO3 += IMPORTE
\end_layout

\begin_layout Plain Layout

        elif MOZO == 4:
\end_layout

\begin_layout Plain Layout

            MOZO4 += IMPORTE
\end_layout

\begin_layout Plain Layout

        else:
\end_layout

\begin_layout Plain Layout

            MOZO5 += IMPORTE
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se debe pagar
\begin_inset Quotes frd
\end_inset

, MOZO1 * 5 / 100, 
\begin_inset Quotes fld
\end_inset

al mozo 1
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se debe pagar
\begin_inset Quotes frd
\end_inset

, MOZO2 * 5 / 100, 
\begin_inset Quotes fld
\end_inset

al mozo 2
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se debe pagar
\begin_inset Quotes frd
\end_inset

, MOZO3 * 5 / 100, 
\begin_inset Quotes fld
\end_inset

al mozo 3
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se debe pagar
\begin_inset Quotes frd
\end_inset

, MOZO4 * 5 / 100, 
\begin_inset Quotes fld
\end_inset

al mozo 4
\begin_inset Quotes frd
\end_inset

)
\end_layout

\begin_layout Plain Layout

print(
\begin_inset Quotes fld
\end_inset

Se debe pagar
\begin_inset Quotes frd
\end_inset

, MOZO5 * 5 / 100, 
\begin_inset Quotes fld
\end_inset

al mozo 5
\begin_inset Quotes frd
\end_inset

)
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Se dispone de un conjunto de boletas (desordenadas) con el número de identificac
ión de un vendedor y un importe correspondiente a una venta.
 Los números de vendedores son: 1, 2, 3 y 4.
 Emitir un listado con el número de vendedor y su total acumulado.
 Con número de vendedor igual a 0 se indica fin de datos.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Se tienen como datos los importes de las ventas de cada una de las sucursales
 de una empresa, junto con el código de sucursal (1, 2, 3, 4 ó 5).- Cada
 sucursal puede tener varias ventas.
 Los datos no están ordenados por código de sucursal.
 Un código igual a cero indica fin de datos.- Obtener el total de ventas
 para cada sucursal.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Ingresar N ternas formadas por dos números (distintos de cero) y un carácter
 que corresponde al código de la operación a efectuar entre ellos (
\begin_inset Quotes fld
\end_inset

+
\begin_inset Quotes frd
\end_inset

; 
\begin_inset Quotes fld
\end_inset

-
\begin_inset Quotes frd
\end_inset

; 
\begin_inset Quotes fld
\end_inset

*
\begin_inset Quotes frd
\end_inset

; 
\begin_inset Quotes fld
\end_inset

/
\begin_inset Quotes frd
\end_inset

).
 Informar el resultado de cada expresión.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
COMPLETAR.
\end_layout

\begin_deeper
\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD: COMPLETAR.
\end_layout

\begin_layout Itemize
Python: COMPLETAR.
\end_layout

\end_deeper
\begin_layout Enumerate
Se desea realizar un proceso iterativo que resuelva el siguiente Menú de
 Opciones invocando a procedimientos: 
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Menú de opciones
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Suma de dos números
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Cuadrado de un número
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Producto de dos números
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seno de un ángulo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fin de proceso
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Paragraph
Solución
\end_layout

\begin_layout Itemize
NSD:
\end_layout

\begin_deeper
\begin_layout Standard
\align center
\begin_inset space \hspace*{}
\length -5.5cm
\end_inset


\begin_inset Graphics
	filename Imagenes/ej6-7.png
	scale 26

\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Python:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "language=Python,fontsize={\normalsize}"
inline false
status open

\begin_layout Plain Layout

from math import sin
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

OP = 1
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

while OP != 0:
\end_layout

\begin_layout Plain Layout

    print("Menu de opciones")
\end_layout

\begin_layout Plain Layout

    print("1 - Suma")
\end_layout

\begin_layout Plain Layout

    print("2 - Cuadrado")
\end_layout

\begin_layout Plain Layout

    print("3 - Producto")
\end_layout

\begin_layout Plain Layout

    print("4 - Seno")
\end_layout

\begin_layout Plain Layout

    print("0 - Salir")
\end_layout

\begin_layout Plain Layout

    OP = int(input("Ingrese una opcion: "))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    if OP == 1:
\end_layout

\begin_layout Plain Layout

        NUMERO1 = int(input("Ingrese un numero: "))
\end_layout

\begin_layout Plain Layout

        NUMERO2 = int(input("Ingrese otro numero: "))
\end_layout

\begin_layout Plain Layout

        print("La suma es:", NUMERO1 + NUMERO2)
\end_layout

\begin_layout Plain Layout

    elif OP == 2:
\end_layout

\begin_layout Plain Layout

        NUMERO1 = int(input("Ingrese un numero: "))
\end_layout

\begin_layout Plain Layout

        print("El cuadrado es:", NUMERO1 * NUMERO1)
\end_layout

\begin_layout Plain Layout

    elif OP == 3:
\end_layout

\begin_layout Plain Layout

        NUMERO1 = int(input("Ingrese un numero: "))
\end_layout

\begin_layout Plain Layout

        NUMERO2 = int(input("Ingrese otro numero: "))
\end_layout

\begin_layout Plain Layout

        print("El producto es:", NUMERO1 * NUMERO2)
\end_layout

\begin_layout Plain Layout

    elif OP == 4:
\end_layout

\begin_layout Plain Layout

        NUMERO1 = int(input("Ingrese un angulo en radianes: "))
\end_layout

\begin_layout Plain Layout

        print("El seno es:", sin(NUMERO1))
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Flex Color Box
status open

\begin_layout Plain Layout
Vale la pena notar que la función seno no forma parte de la libreria base
 de Python.
 Para poder utilizarla hay que importarla tal como puede observarse en el
 código.
\end_layout

\end_inset


\end_layout

\end_deeper
\end_deeper
\end_body
\end_document
